name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Generate signing key
        run: |
          keytool -genkey -v \
            -keystore my-release-key.keystore \
            -alias my-key-alias \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -storepass password \
            -keypass password \
            -dname "CN=Android, OU=Android, O=Android, L=Unknown, ST=Unknown, C=US"

      - name: Configure signing in gradle.properties
        run: |
          # 先检查是否存在原有gradle.properties
          if [ -f "$GITHUB_WORKSPACE/gradle.properties" ]; then
              # 备份原有文件
              cp $GITHUB_WORKSPACE/gradle.properties $GITHUB_WORKSPACE/gradle.properties.bak
          fi
          # 创建新的gradle.properties
          cat << EOF > $GITHUB_WORKSPACE/gradle.properties
          android.nonTransitiveRClass=true
          RELEASE_STORE_FILE=my-release-key.keystore
          RELEASE_STORE_PASSWORD=password
          RELEASE_KEY_ALIAS=my-key-alias
          RELEASE_KEY_PASSWORD=password
          EOF

      - name: Build signed APK
        run: |
          ./gradlew assembleRelease
          ls -l app/build/outputs/apk/release

      - name: Verify APK signature
        run: |
          apk_path=$(find app/build/outputs/apk/release -name "*.apk" | head -n 1)
          if [ -z "$apk_path" ]; then
              echo "APK not found!"
              exit 1
          fi
          apksigner verify --verbose "$apk_path"

      - name: Upload signed APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-signed.apk
          path: app/build/outputs/apk/release/*-release.apk